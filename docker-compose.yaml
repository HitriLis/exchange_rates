version: "3"

services:
  db:
    image: postgres:latest
    command: postgres -c 'max_connections=200'
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    volumes:
      - postgresql-data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    restart: on-failure

  nginx:
    command: nginx -g "daemon off;"
    depends_on:
      - app
    image: nginx:alpine
    restart: on-failure
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - static:/var/www/app/static
    ports:
      - "8000:8000"


  app:
    build:
      context: .
    command: bash -c 'while !</dev/tcp/db/5432; do sleep 1; done; python3 manage.py collectstatic --no-input; python3 manage.py migrate; python3 manage.py loaddata crm/fixtures/dev.json; uvicorn crm.asgi:application --port 8000 --host 0.0.0.0 --reload'
    volumes:
      - static:/app/static
      - .:/app/
    depends_on:
      - db
    restart: on-failure

  api:
    build:
      context: .
    command: bash -c 'while !</dev/tcp/db/5432; do sleep 1; done; uvicorn crm.asgi:fastapp --port 8000 --host 0.0.0.0 --reload'
    depends_on:
      - db
      - redis
    volumes:
      - .:/app/
    restart: on-failure

  redis:
    image: redis:alpine
    expose:
      - 6379
    volumes:
      - "redis_data:/data"
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli", "ping" ]
      interval: 1s
      timeout: 3s
      retries: 30



volumes:
  postgresql-data:
  static:
  redis_data: {}